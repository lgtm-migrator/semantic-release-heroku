language: node_js
os: linux
node_js: lts/*
stages:
  - analyze
  - test
  - name: env-prepare
    if: branch = master
  - name: env-test
    if: branch = master
  - name: deploy
    if: branch = master

env_test: &env_test
      stage: env-test
      before_script: npm i mocha --no-save
      env: "NODE_ENV=production"
      workspaces:
        use: package
      script: "./node_modules/.bin/mocha --config .mocharc.bundle.json ./tmp/tests.js"

jobs:
  include:
    - stage: analyze
      script: "npx danger ci -d .dangerfile.js"
    - stage: test
      script: "npm run test:lint"
    - stage: test
      script: "npm run test:coverage"
      after_success: "npm run coveralls"
    - stage: test
      script: "npm run test:security"
    - stage: test
      script: "npm run test:package"
    - stage: test
      script: "npm run test:debt"
    # Test in multiple environments
    - stage: env-prepare
      script: "./bin/pack.sh && ./bin/pack-tests.js"
      workspaces:
        create:
          name: package
          paths: tmp
    - <<: *env_test
      node_js: 6
    - <<: *env_test
      node_js: 6
      os: osx
    - <<: *env_test
      node_js: 6
      os: windows
    - <<: *env_test
      node_js: 8
    - <<: *env_test
      node_js: 8
      os: osx
    - <<: *env_test
      node_js: 8
      os: windows
    - <<: *env_test
      node_js: 10
    - <<: *env_test
      node_js: 10
      os: osx
    - <<: *env_test
      node_js: 10
      os: windows
    - <<: *env_test
      node_js: 12
    - <<: *env_test
      node_js: 12
      os: osx
    - <<: *env_test
      node_js: 12
      os: windows
    - <<: *env_test
      node_js: lts/*
    - <<: *env_test
      node_js: lts/*
      os: osx
    - <<: *env_test
      node_js: lts/*
      os: windows
    - <<: *env_test
      node_js: 15
    - <<: *env_test
      node_js: 15
      os: osx
    - <<: *env_test
      node_js: 15
      os: windows
# Deploy
    - stage: release
      node_js: lts/*
      deploy:
        provider: script
        skip_cleanup: true
        script: npm run semantic-release
notifications:
  email:
    recipients: dipustovit@gmail.com
    on_success: change
    on_failure: always